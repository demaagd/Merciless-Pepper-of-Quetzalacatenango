PROJECT(cskvs)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(cskvs_VERSION_MAJOR "0")
SET(cskvs_VERSION_MINOR "0")
SET(cskvs_VERSION_REV "1")

SET(CPACK_PACKAGE_VERSION "${cskvs_VERSION_MAJOR}.${cskvs_VERSION_MINOR}.${cskvs_VERSION_REV}")
ADD_DEFINITIONS( -Dcskvs_VERSION_MAJOR=${cskvs_VERSION_MAJOR} -Dcskvs_VERSION_MINOR=${cskvs_VERSION_MINOR} -Dcskvs_VERSION_REV=${cskvs_VERSION_REV})

SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -Wall")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall")

INCLUDE(FindPkgConfig)
INCLUDE(leveldb.cmake)

PKG_CHECK_MODULES(JSON json)
PKG_CHECK_MODULES(ZLIB zlib)
PKG_CHECK_MODULES(CURL libcurl)
PKG_CHECK_MODULES(GLIB glib-2.0)

INCLUDE_DIRECTORIES(${LEVELDB_INCLUDE_DIR})

ADD_EXECUTABLE(cskvs cskvs.c util.c util.h mongoose.c mongoose.h)
TARGET_LINK_LIBRARIES(cskvs pthread dl leveldb json z)
INSTALL(TARGETS cskvs DESTINATION cskvs)

ADD_EXECUTABLE(cskvb cskvb.c util.c util.h mongoose.c mongoose.h)
TARGET_LINK_LIBRARIES(cskvb pthread dl json z curl glib-2.0)
INSTALL(TARGETS cskvb DESTINATION cskvb)

SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Dave DeMaagd")
SET(CPACK_DEBIAN_PACKAGE_SUGGESTS "")

INCLUDE(CPack)
